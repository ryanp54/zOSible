---
  - hosts: mainframe
    gather_facts: no
    environment:
      "{{environment_vars}}"

    collections:
      - ibm.ibm_zos_core

    tasks:
      - include: auth.yaml

      - name: Generate data set name if none provided
        block:
          - set_fact:
              temp_data_set: yes
          - set_fact:
              data_set_name: "{{ansible_user | upper}}.ZOSIBLE.TMP{{ 99999 | random(start=10000) }}"
        when: data_set_name is not defined

      - include: upload.yaml

      - fail:
          msg: File upload failed
        when: copy_result is not defined or (copy_result.get('skipped') | bool)

      - name: Submit for execution if JCL
        block:
          - zos_job_submit:
              src: "{{data_set_name}}"
              location: DATA_SET
              wait: true
              return_output: true
            register: job_results
          - set_fact:
              job_output: "{{job_results.jobs[0].ddnames}}"
        when: exec_type is not defined or exec_type != 'REXX'

      - name: Execute if REXX
        block:
          - zos_tso_command:
              commands:
                - EXEC '{{data_set_name}}' exec
            register: exec_results
          - set_fact:
              job_output: "{{exec_results.output}}"
        when: exec_type is defined and exec_type == 'REXX'

      - include: remove.yaml
        when: temp_data_set is defined

      - name: Write job output
        template:
          src: "{{ playbook_dir }}/templates/job_output.j2"
          dest: "/usr/local/bin/.zosible/output.txt"
          force: yes
        delegate_to: localhost
